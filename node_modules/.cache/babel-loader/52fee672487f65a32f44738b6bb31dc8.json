{"remainingRequest":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js!/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhanghongqun/Desktop/github/sugar-admin/src/permission.js","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/src/permission.js","mtime":1592752792539},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _getPageTitle = _interopRequireDefault(require(\"@/utils/get-page-title\"));\n\n// progress bar\n// progress bar style\n// get token from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login']; // no redirect whitelist\n\n_router.default.beforeEach( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, hasGetUserInfo;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            _nprogress.default.start(); // set page title\n\n\n            document.title = (0, _getPageTitle.default)(to.meta.title); // determine whether the user has logged in\n\n            hasToken = (0, _auth.getToken)();\n\n            if (!hasToken) {\n              _context.next = 29;\n              break;\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 9;\n              break;\n            }\n\n            // if is logged in, redirect to the home page\n            next({\n              path: '/'\n            });\n\n            _nprogress.default.done();\n\n            _context.next = 27;\n            break;\n\n          case 9:\n            hasGetUserInfo = _store.default.getters.name;\n\n            if (!hasGetUserInfo) {\n              _context.next = 14;\n              break;\n            }\n\n            next();\n            _context.next = 27;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return _store.default.dispatch('user/getInfo');\n\n          case 17:\n            next();\n            _context.next = 27;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](14);\n            _context.next = 24;\n            return _store.default.dispatch('user/resetToken');\n\n          case 24:\n            _elementUi.Message.error(_context.t0.Message || 'Has Error');\n\n            next(\"/login?redirect=\".concat(to.path));\n\n            _nprogress.default.done();\n\n          case 27:\n            _context.next = 30;\n            break;\n\n          case 29:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n\n              _nprogress.default.done();\n            }\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 20]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n_router.default.afterEach(function () {\n  // finish progress bar\n  _nprogress.default.done();\n});",{"version":3,"sources":["/Users/zhanghongqun/Desktop/github/sugar-admin/src/permission.js"],"names":["NProgress","configure","showSpinner","whiteList","router","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","store","getters","name","dispatch","Message","error","indexOf","afterEach"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAHkC;AACD;AACO;AAGxCA,mBAAUC,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BC,gBAAOC,UAAP;AAAA,mFAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAR,+BAAUS,KAAV,GAFgB,CAIhB;;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiB,2BAAaL,EAAE,CAACM,IAAH,CAAQD,KAArB,CAAjB,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQC,qBARD;;AAAA,iBAUZA,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;;AACAd,+BAAUe,IAAV;;AAdY;AAAA;;AAAA;AAgBNC,YAAAA,cAhBM,GAgBWC,eAAMC,OAAN,CAAcC,IAhBzB;;AAAA,iBAiBRH,cAjBQ;AAAA;AAAA;AAAA;;AAkBVR,YAAAA,IAAI;AAlBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAsBFS,eAAMG,QAAN,CAAe,cAAf,CAtBE;;AAAA;AAwBRZ,YAAAA,IAAI;AAxBI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBA2BFS,eAAMG,QAAN,CAAe,iBAAf,CA3BE;;AAAA;AA6BRC,+BAAQC,KAAR,CAAc,YAAMD,OAAN,IAAiB,WAA/B;;AACAb,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;;AACAd,+BAAUe,IAAV;;AA/BQ;AAAA;AAAA;;AAAA;AAoCd;AAEA,gBAAIZ,SAAS,CAACoB,OAAV,CAAkBjB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;;AACAd,iCAAUe,IAAV;AACD;;AA7Ca;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AAiDAX,gBAAOoB,SAAP,CAAiB,YAAM;AACrB;AACAxB,qBAAUe,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      const hasGetUserInfo = store.getters.name\n      if (hasGetUserInfo) {\n        next()\n      } else {\n        try {\n          // get user info\n          await store.dispatch('user/getInfo')\n\n          next()\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('user/resetToken')\n          \n          Message.error(error.Message || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}