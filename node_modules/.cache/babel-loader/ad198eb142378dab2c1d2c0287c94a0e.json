{"remainingRequest":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js!/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhanghongqun/Desktop/github/sugar-admin/src/store/modules/user.js","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/src/store/modules/user.js","mtime":1593702024720},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = require(\"@/router\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    token: (0, _auth.getToken)(),\n    name: '',\n    avatar: ''\n  };\n};\n\nvar state = getDefaultState();\nvar mutations = {\n  RESET_STATE: function RESET_STATE(state) {\n    Object.assign(state, getDefaultState());\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.token);\n        (0, _auth.setToken)(data.token);\n        console.log((0, _auth.getToken)());\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        if (!response) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var username = response.username,\n            avatar = response.avatar;\n        commit('SET_NAME', username);\n        commit('SET_AVATAR', avatar);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        (0, _auth.removeToken)(); // must remove  token  first\n\n        (0, _router.resetRouter)();\n        commit('RESET_STATE');\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      (0, _auth.removeToken)(); // must remove  token  first\n\n      commit('RESET_STATE');\n      resolve();\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/zhanghongqun/Desktop/github/sugar-admin/src/store/modules/user.js"],"names":["getDefaultState","token","name","avatar","state","mutations","RESET_STATE","Object","assign","SET_TOKEN","SET_NAME","SET_AVATAR","actions","login","userInfo","commit","username","password","Promise","resolve","reject","trim","then","response","data","console","log","catch","error","getInfo","logout","resetToken","namespaced"],"mappings":"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","sourcesContent":["import { login, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport { resetRouter } from '@/router'\n\nconst getDefaultState = () => {\n  return {\n    token: getToken(),\n    name: '',\n    avatar: ''\n  }\n}\n\nconst state = getDefaultState()\n\nconst mutations = {\n  RESET_STATE: (state) => {\n    Object.assign(state, getDefaultState())\n  },\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  }\n}\n\nconst actions = {\n  // user login\n  login({ commit }, userInfo) {\n    const { username, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ username: username.trim(), password: password }).then(response => {\n        const { data } = response\n        commit('SET_TOKEN', data.token)\n        setToken(data.token)\n        console.log(getToken())\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // get user info\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token).then(response => {\n        if (!response) {\n          reject('Verification failed, please Login again.')\n        }\n       \n        const { username, avatar } = response\n      \n        commit('SET_NAME', username)\n        commit('SET_AVATAR', avatar)\n        resolve(response)\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // user logout\n  logout({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token).then(() => {\n        removeToken() // must remove  token  first\n        resetRouter()\n        commit('RESET_STATE')\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      removeToken() // must remove  token  first\n      commit('RESET_STATE')\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n\n"]}]}