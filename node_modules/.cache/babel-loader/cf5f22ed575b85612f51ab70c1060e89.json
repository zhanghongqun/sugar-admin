{"remainingRequest":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js!/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/approve/order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/approve/order.vue","mtime":1596908392647},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import Tinymce from '@/components/Tinymce'\nimport Upload from \"@/components/Upload/singleImage\";\nimport MDinput from \"@/components/MDinput\"; // import Multiselect from 'vue-multiselect'// 使用的一个多选框组件，element-ui的select不能满足所有需求\n// import 'vue-multiselect/dist/vue-multiselect.min.css'// 多选框组件css\n\nimport Sticky from \"@/components/Sticky\"; // 粘性header组件\n// import { validateURL } from '@/utils/validate'\n\nimport { fetchTask, createTask } from \"@/api/task\"; // import { userSearch } from '@/api/remoteSearch'\n\nvar defaultTask = {\n  status: \"draft\",\n  name: \"\",\n  // 任务名\n  description: \"\",\n  // 任务描述\n  reward: \"\",\n  // 任务奖励\n  searchKeyword: \"\",\n  //搜索关键字\n  pictureUrl: \"\",\n  // 文章图片\n  displayTime: undefined,\n  // 前台展示时间\n  id: undefined,\n  platforms: [\"a-platform\"],\n  comment_disabled: false\n};\nexport default {\n  name: \"taskDetail\",\n  components: {\n    Sticky: Sticky,\n    MDinput: MDinput,\n    Upload: Upload\n  },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateRequire = function validateRequire(rule, value, callback) {\n      if (value === \"\") {\n        _this.$message({\n          message: rule.field + \"为必传项\",\n          type: \"error\"\n        });\n\n        callback(null);\n      } else {\n        callback();\n      }\n    };\n\n    var validateSourceUri = function validateSourceUri(rule, value, callback) {\n      if (value) {\n        if (validateURL(value)) {\n          callback();\n        } else {\n          _this.$message({\n            message: \"外链url填写不正确\",\n            type: \"error\"\n          });\n\n          callback(null);\n        }\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      src: \"https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg\",\n      postTask: Object.assign({}, defaultTask),\n      fetchSuccess: true,\n      loading: false,\n      userLIstOptions: [],\n      platformsOptions: [{\n        key: \"a-platform\",\n        name: \"a-platform\"\n      }, {\n        key: \"b-platform\",\n        name: \"b-platform\"\n      }, {\n        key: \"c-platform\",\n        name: \"c-platform\"\n      }],\n      rules: _defineProperty({\n        pictureUrl: [{\n          validator: validateRequire\n        }],\n        name: [{\n          validator: validateRequire\n        }],\n        description: [{\n          validator: validateRequire\n        }]\n      }, \"pictureUrl\", [{\n        validator: validateSourceUri,\n        trigger: \"blur\"\n      }])\n    };\n  },\n  computed: {\n    contentShortLength: function contentShortLength() {\n      return this.postTask.description.length;\n    }\n  },\n  created: function created() {\n    if (this.isEdit) {\n      this.fetchData();\n    } else {\n      this.postTask = Object.assign({}, defaultTask);\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      var id = this.$route.params.taskId;\n      fetchTask(id).then(function (response) {\n        _this2.postTask = response;\n      }).catch(function (err) {\n        _this2.fetchSuccess = false;\n        console.log(err);\n      });\n    },\n    submitForm: function submitForm() {\n      var _this3 = this;\n\n      this.postTask.displayTime = parseInt(this.displayTime / 1000);\n      console.log(this.postTask);\n      createTask(this.postTask);\n      this.$refs.postTask.validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n\n          _this3.$notify({\n            title: \"成功\",\n            message: \"发布文章成功\",\n            type: \"success\",\n            duration: 2000\n          });\n\n          _this3.postTask.status = \"published\";\n          _this3.loading = false;\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    draftForm: function draftForm() {\n      if (this.postTask.description.length === 0 || this.postTask.name.length === 0) {\n        this.$message({\n          message: \"请填写必要的标题和内容\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      this.$message({\n        message: \"保存成功\",\n        type: \"success\",\n        showClose: true,\n        duration: 1000\n      });\n      this.postTask.status = \"draft\";\n    } // getRemoteUserList(query) {\n    //   userSearch(query).then(response => {\n    //     if (!response.data.items) return;\n    //     console.log(response);\n    //     this.userLIstOptions = response.data.items.map(v => ({\n    //       key: v.name\n    //     }));\n    //   });\n    // }\n\n  }\n};",null]}