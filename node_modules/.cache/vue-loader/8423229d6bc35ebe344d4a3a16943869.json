{"remainingRequest":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhanghongqun/Desktop/github/vue-admin-template-master/src/views/task/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/src/views/task/index.vue","mtime":1592755722122},{"path":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchList } from \"@/api/task\";\n\nexport default {\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: \"success\",\n        draft: \"gray\",\n        deleted: \"danger\"\n      };\n      return statusMap[status];\n    }\n  },\n  data() {\n    return {\n      list: null,\n      listLoading: true\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true;\n      fetchList().then(response => {\n        this.list = response;\n\n        this.listLoading = false;\n      });\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input style=\"width: 200px;\" class=\"filter-item\" placeholder=\"Title\"></el-input>\n     \n      <router-link style=\"margin-left:15px;\" :to=\"{ path:'form/create-task'}\">\n        <el-button type=\"primary\" class=\"filter-item\" icon=\"el-icon-edit\">Add</el-button>\n      </router-link>\n    </div>\n\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"ID\" width=\"95\">\n        <template slot-scope=\"scope\">{{ scope.$index }}</template>\n      </el-table-column>\n      <el-table-column label=\"名称\">\n        <template slot-scope=\"scope\">{{ scope.row.name }}</template>\n      </el-table-column>\n      <el-table-column label=\"描述\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.description }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"关键字\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">{{ scope.row.searchKeyword }}</template>\n      </el-table-column>\n      <el-table-column class-name=\"status-col\" label=\"奖励\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status | statusFilter\">{{ scope.row.reward }}</el-tag>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column align=\"center\" prop=\"created_at\" label=\"Display_time\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.display_time }}</span>\n        </template>\n      </el-table-column> -->\n    </el-table>\n    <div>\n      <el-pagination background layout=\"prev, pager, next\" :total=\"1000\"></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fetchList } from \"@/api/task\";\n\nexport default {\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: \"success\",\n        draft: \"gray\",\n        deleted: \"danger\"\n      };\n      return statusMap[status];\n    }\n  },\n  data() {\n    return {\n      list: null,\n      listLoading: true\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true;\n      fetchList().then(response => {\n        this.list = response;\n\n        this.listLoading = false;\n      });\n    }\n  }\n};\n</script>\n"]}]}