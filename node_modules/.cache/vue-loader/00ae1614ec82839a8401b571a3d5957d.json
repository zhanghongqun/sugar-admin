{"remainingRequest":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/form/components/taskDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/form/components/taskDetail.vue","mtime":1599405772653},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MDinput from \"@/components/MDinput\";\nimport Sticky from \"@/components/Sticky\";\nimport { fetchTask, createTask } from \"@/api/task\";\nimport { getToken } from \"@/utils/auth\";\n// import { userSearch } from '@/api/remoteSearch'\n\nconst defaultTask = {\n  status: \"\",\n  name: \"\", // 任务名\n  description: \"\", // 任务描述\n  reward: \"\", // 任务奖励\n  searchKeyword: \"\", //搜索关键字\n  productPic: \"\",\n  orderPic: \"\",\n  introducePic: \"\",\n  displayTime: undefined, // 前台展示时间\n  id: undefined,\n  platforms: [\"a-platform\"],\n  comment_disabled: false\n};\n\nexport default {\n  name: \"taskDetail\",\n  components: { Sticky, MDinput },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const validateRequire = (rule, value, callback) => {\n      if (value === \"\") {\n        this.$message({\n          message: rule.field + \"为必传项\",\n          type: \"error\"\n        });\n        callback(null);\n      } else {\n        callback();\n      }\n    };\n    const validateSourceUri = (rule, value, callback) => {\n      if (value) {\n        if (validateURL(value)) {\n          callback();\n        } else {\n          this.$message({\n            message: \"外链url填写不正确\",\n            type: \"error\"\n          });\n          callback(null);\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      productPics: [],\n      orderPics: [],\n      introducePics: [],\n      headers: { Authorization: \"Bearer \" + getToken() },\n      postTask: Object.assign({}, defaultTask),\n      fetchSuccess: true,\n      loading: false,\n      limit: 1,\n\n      rules: {\n        pictureUrl: [{ validator: validateRequire }],\n        name: [{ validator: validateRequire }],\n        description: [{ validator: validateRequire }],\n        pictureUrl: [{ validator: validateSourceUri, trigger: \"blur\" }]\n      }\n    };\n  },\n  computed: {\n    contentShortLength() {\n      return this.postTask.description.length;\n    }\n  },\n  created() {\n    if (this.isEdit) {\n      this.fetchData();\n    } else {\n      this.postTask = Object.assign({}, defaultTask);\n    }\n  },\n  methods: {\n    handleIntroducePictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleIntroducePictureSuccess(response, file, fileList) {\n      this.postTask.introducePic = response;\n    },\n\n    handleProductPictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleProductPictureSuccess(response, file, fileList) {\n      this.postTask.productPic = response;\n    },\n    handleOrderPictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleOrderPictureSuccess(response, file, fileList) {\n      this.postTask.orderPic = response;\n    },\n    fetchData() {\n      let id = this.$route.params.taskId;\n      fetchTask(id)\n        .then(response => {\n          this.productPics.push({url: response.productPic});\n          this.orderPics.push({url: response.productPic});\n          this.introducePics.push({url: response.productPic});\n          this.postTask = response;\n        })\n        .catch(err => {\n          this.fetchSuccess = false;\n        });\n    },\n    submitForm() {\n      this.postTask.start = parseInt(this.postTask.start.getTime());\n      createTask(this.postTask).then(res => {\n        this.$router.push({ name: \"tasklist\" });\n      });\n      // this.$refs.postTask.validate(valid => {\n      //   if (valid) {\n      //     this.loading = true;\n      //     this.$notify({\n      //       title: \"成功\",\n      //       message: \"发布文章成功\",\n      //       type: \"success\",\n      //       duration: 2000\n      //     });\n      //     this.postTask.status = \"published\";\n      //     this.loading = false;\n      //   } else {\n      //     console.log(\"error submit!!\");\n      //     return false;\n      //   }\n      // });\n    }\n    // draftForm() {\n    //   if (\n    //     this.postTask.description.length === 0 ||\n    //     this.postTask.name.length === 0\n    //   ) {\n    //     this.$message({\n    //       message: \"请填写必要的标题和内容\",\n    //       type: \"warning\"\n    //     });\n    //     return;\n    //   }\n    //   this.$message({\n    //     message: \"保存成功\",\n    //     type: \"success\",\n    //     showClose: true,\n    //     duration: 1000\n    //   });\n    //   this.postTask.status = \"draft\";\n    // }\n  }\n};\n",{"version":3,"sources":["taskDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"taskDetail.vue","sourceRoot":"src/views/form/components","sourcesContent":["<template>\n  <div class=\"createPost-container\">\n    <el-form\n      class=\"form-container\"\n      size=\"medium\"\n      label-position=\"top\"\n      :model=\"postTask\"\n      :rules=\"rules\"\n      ref=\"postTask\"\n    >\n      <sticky :className=\"'sub-navbar '+postTask.status\">\n        <template v-if=\"fetchSuccess\">\n          <!-- <router-link style=\"margin-right:15px;\" v-show=\"isEdit\" :to=\"{ path:'create-form'}\">\n            <el-button type=\"info\">创建任务</el-button>\n          </router-link>-->\n          <el-button\n            v-loading=\"loading\"\n            style=\"margin-left: 10px;\"\n            type=\"success\"\n            @click=\"submitForm()\"\n          >发布</el-button>\n        </template>\n        <template v-else>\n          <el-tag>发送异常错误,刷新页面,或者联系程序员</el-tag>\n        </template>\n      </sticky>\n      <el-col :span=\"12\">\n        <div class=\"createPost-main-container\">\n          <el-form-item label=\"标题:\">\n            <el-input\n              type=\"textarea\"\n              class=\"article-textarea\"\n              :rows=\"3\"\n              autosize\n              placeholder=\"请输入标题\"\n              v-model=\"postTask.name\"\n            ></el-input>\n            <span class=\"word-counter\" v-show=\"contentShortLength\">{{contentShortLength}}字</span>\n          </el-form-item>\n\n          <!-- <el-form-item label=\"分类:\">\n            <el-select v-model=\"postTask.category\" placeholder=\"请选择任务分类\">\n              <el-option label=\"高客单\" value=\"shanghai\"></el-option>\n              <el-option label=\"低客单\" value=\"beijing\"></el-option>\n            </el-select>\n          </el-form-item>-->\n\n          <el-form-item label=\"发布时间:\">\n            <el-date-picker\n              v-model=\"postTask.start\"\n              type=\"datetime\"\n              format=\"yyyy-MM-dd HH:mm:ss\"\n              placeholder=\"选择日期时间\"\n            ></el-date-picker>\n          </el-form-item>\n\n          <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"商场搜索词\" placement=\"top\"> -->\n          <el-form-item label=\"关键字:\">\n            <el-input placeholder=\"商场搜索词\" v-model=\"postTask.searchKeyword\"></el-input>\n          </el-form-item>\n          <!-- </el-tooltip> -->\n\n          <el-form-item label=\"描述:\">\n            <el-input\n              type=\"textarea\"\n              class=\"article-textarea\"\n              :rows=\"3\"\n              autosize\n              placeholder=\"请输入内容\"\n              v-model=\"postTask.description\"\n            ></el-input>\n            <span class=\"word-counter\" v-show=\"contentShortLength\">{{contentShortLength}}字</span>\n          </el-form-item>\n\n          <el-form-item label=\"奖励:\">\n            <el-input\n              type=\"textarea\"\n              class=\"article-textarea\"\n              rows=\"3\"\n              autosize\n              placeholder=\"请输入内容\"\n              v-model=\"postTask.reward\"\n            ></el-input>\n            <span class=\"word-counter\" v-show=\"contentShortLength\">{{contentShortLength}}字</span>\n          </el-form-item>\n          <div style=\"margin-bottom: 20px;\">\n            <label class=\"el-form-item__label\">列表图片:</label>\n            <el-upload\n              :headers=\"headers\"\n              action=\"/sugar/api/file\"\n              :limit=\"1\"\n              list-type=\"picture-card\"\n              :on-preview=\"handleIntroducePictureCardPreview\"\n              :on-success=\"handleIntroducePictureSuccess\"\n              :file-list=\"orderPics\"\n            ></el-upload>\n          </div>\n\n          <div style=\"margin-bottom: 20px;\">\n            <label class=\"el-form-item__label\">商品图片:</label>\n            <el-upload\n              :headers=\"headers\"\n              action=\"/sugar/api/file\"\n              :limit=\"1\"\n              list-type=\"picture-card\"\n              :on-preview=\"handleProductPictureCardPreview\"\n              :on-success=\"handleProductPictureSuccess\"\n              :file-list=\"productPics\"\n            ></el-upload>\n          </div>\n          <div style=\"margin-bottom: 20px;\">\n            <label class=\"el-form-item__label\">订单图片:</label>\n            <el-upload\n              :headers=\"headers\"\n              action=\"/sugar/api/file\"\n              :limit=\"1\"\n              list-type=\"picture-card\"\n              :on-preview=\"handleOrderPictureCardPreview\"\n              :on-success=\"handleOrderPictureSuccess\"\n              :file-list=\"orderPics\"\n            ></el-upload>\n          </div>\n        </div>\n      </el-col>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport MDinput from \"@/components/MDinput\";\nimport Sticky from \"@/components/Sticky\";\nimport { fetchTask, createTask } from \"@/api/task\";\nimport { getToken } from \"@/utils/auth\";\n// import { userSearch } from '@/api/remoteSearch'\n\nconst defaultTask = {\n  status: \"\",\n  name: \"\", // 任务名\n  description: \"\", // 任务描述\n  reward: \"\", // 任务奖励\n  searchKeyword: \"\", //搜索关键字\n  productPic: \"\",\n  orderPic: \"\",\n  introducePic: \"\",\n  displayTime: undefined, // 前台展示时间\n  id: undefined,\n  platforms: [\"a-platform\"],\n  comment_disabled: false\n};\n\nexport default {\n  name: \"taskDetail\",\n  components: { Sticky, MDinput },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const validateRequire = (rule, value, callback) => {\n      if (value === \"\") {\n        this.$message({\n          message: rule.field + \"为必传项\",\n          type: \"error\"\n        });\n        callback(null);\n      } else {\n        callback();\n      }\n    };\n    const validateSourceUri = (rule, value, callback) => {\n      if (value) {\n        if (validateURL(value)) {\n          callback();\n        } else {\n          this.$message({\n            message: \"外链url填写不正确\",\n            type: \"error\"\n          });\n          callback(null);\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      productPics: [],\n      orderPics: [],\n      introducePics: [],\n      headers: { Authorization: \"Bearer \" + getToken() },\n      postTask: Object.assign({}, defaultTask),\n      fetchSuccess: true,\n      loading: false,\n      limit: 1,\n\n      rules: {\n        pictureUrl: [{ validator: validateRequire }],\n        name: [{ validator: validateRequire }],\n        description: [{ validator: validateRequire }],\n        pictureUrl: [{ validator: validateSourceUri, trigger: \"blur\" }]\n      }\n    };\n  },\n  computed: {\n    contentShortLength() {\n      return this.postTask.description.length;\n    }\n  },\n  created() {\n    if (this.isEdit) {\n      this.fetchData();\n    } else {\n      this.postTask = Object.assign({}, defaultTask);\n    }\n  },\n  methods: {\n    handleIntroducePictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleIntroducePictureSuccess(response, file, fileList) {\n      this.postTask.introducePic = response;\n    },\n\n    handleProductPictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleProductPictureSuccess(response, file, fileList) {\n      this.postTask.productPic = response;\n    },\n    handleOrderPictureCardPreview(file) {\n      // this.dialogImageUrl = file.url;\n      // this.dialogVisible = true;\n    },\n    handleOrderPictureSuccess(response, file, fileList) {\n      this.postTask.orderPic = response;\n    },\n    fetchData() {\n      let id = this.$route.params.taskId;\n      fetchTask(id)\n        .then(response => {\n          this.productPics.push({url: response.productPic});\n          this.orderPics.push({url: response.productPic});\n          this.introducePics.push({url: response.productPic});\n          this.postTask = response;\n        })\n        .catch(err => {\n          this.fetchSuccess = false;\n        });\n    },\n    submitForm() {\n      this.postTask.start = parseInt(this.postTask.start.getTime());\n      createTask(this.postTask).then(res => {\n        this.$router.push({ name: \"tasklist\" });\n      });\n      // this.$refs.postTask.validate(valid => {\n      //   if (valid) {\n      //     this.loading = true;\n      //     this.$notify({\n      //       title: \"成功\",\n      //       message: \"发布文章成功\",\n      //       type: \"success\",\n      //       duration: 2000\n      //     });\n      //     this.postTask.status = \"published\";\n      //     this.loading = false;\n      //   } else {\n      //     console.log(\"error submit!!\");\n      //     return false;\n      //   }\n      // });\n    }\n    // draftForm() {\n    //   if (\n    //     this.postTask.description.length === 0 ||\n    //     this.postTask.name.length === 0\n    //   ) {\n    //     this.$message({\n    //       message: \"请填写必要的标题和内容\",\n    //       type: \"warning\"\n    //     });\n    //     return;\n    //   }\n    //   this.$message({\n    //     message: \"保存成功\",\n    //     type: \"success\",\n    //     showClose: true,\n    //     duration: 1000\n    //   });\n    //   this.postTask.status = \"draft\";\n    // }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"src/styles/mixin.scss\";\n.title-prompt {\n  position: absolute;\n  right: 0px;\n  font-size: 12px;\n  top: 10px;\n  color: #ff4949;\n}\n.createPost-container {\n  position: relative;\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n    .editor-container {\n      min-height: 500px;\n      margin: 0 0 30px;\n      .editor-upload-btn-container {\n        text-align: right;\n        margin-right: 10px;\n        .editor-upload-btn {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: -10px;\n    top: 0px;\n  }\n}\n</style>\n\n"]}]}