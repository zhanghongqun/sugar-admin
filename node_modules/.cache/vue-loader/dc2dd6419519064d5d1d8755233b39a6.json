{"remainingRequest":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/approve/order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/src/views/approve/order.vue","mtime":1596908392647},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhanghongqun/Desktop/github/sugar-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Tinymce from '@/components/Tinymce'\nimport Upload from \"@/components/Upload/singleImage\";\nimport MDinput from \"@/components/MDinput\";\n// import Multiselect from 'vue-multiselect'// 使用的一个多选框组件，element-ui的select不能满足所有需求\n// import 'vue-multiselect/dist/vue-multiselect.min.css'// 多选框组件css\nimport Sticky from \"@/components/Sticky\"; // 粘性header组件\n// import { validateURL } from '@/utils/validate'\nimport { fetchTask, createTask } from \"@/api/task\";\n// import { userSearch } from '@/api/remoteSearch'\n\nconst defaultTask = {\n  status: \"draft\",\n  name: \"\", // 任务名\n  description: \"\", // 任务描述\n  reward: \"\", // 任务奖励\n  searchKeyword: \"\", //搜索关键字\n  pictureUrl: \"\", // 文章图片\n  displayTime: undefined, // 前台展示时间\n  id: undefined,\n  platforms: [\"a-platform\"],\n  comment_disabled: false\n};\n\nexport default {\n  name: \"taskDetail\",\n  components: { Sticky, MDinput, Upload },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const validateRequire = (rule, value, callback) => {\n      if (value === \"\") {\n        this.$message({\n          message: rule.field + \"为必传项\",\n          type: \"error\"\n        });\n        callback(null);\n      } else {\n        callback();\n      }\n    };\n    const validateSourceUri = (rule, value, callback) => {\n      if (value) {\n        if (validateURL(value)) {\n          callback();\n        } else {\n          this.$message({\n            message: \"外链url填写不正确\",\n            type: \"error\"\n          });\n          callback(null);\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      src:\"https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg\",\n      postTask: Object.assign({}, defaultTask),\n      fetchSuccess: true,\n      loading: false,\n      userLIstOptions: [],\n      platformsOptions: [\n        { key: \"a-platform\", name: \"a-platform\" },\n        { key: \"b-platform\", name: \"b-platform\" },\n        { key: \"c-platform\", name: \"c-platform\" }\n      ],\n      rules: {\n        pictureUrl: [{ validator: validateRequire }],\n        name: [{ validator: validateRequire }],\n        description: [{ validator: validateRequire }],\n        pictureUrl: [{ validator: validateSourceUri, trigger: \"blur\" }]\n      }\n    };\n  },\n  computed: {\n    contentShortLength() {\n      return this.postTask.description.length;\n    }\n  },\n  created() {\n    if (this.isEdit) {\n      this.fetchData();\n    } else {\n      this.postTask = Object.assign({}, defaultTask);\n    }\n  },\n  methods: {\n    fetchData() {\n      let id = this.$route.params.taskId;\n      fetchTask(id)\n        .then(response => {\n          this.postTask = response;\n        })\n        .catch(err => {\n          this.fetchSuccess = false;\n          console.log(err);\n        });\n    },\n    submitForm() {\n      this.postTask.displayTime = parseInt(this.displayTime / 1000);\n      console.log(this.postTask);\n      createTask(this.postTask);\n      this.$refs.postTask.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$notify({\n            title: \"成功\",\n            message: \"发布文章成功\",\n            type: \"success\",\n            duration: 2000\n          });\n          this.postTask.status = \"published\";\n          this.loading = false;\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    draftForm() {\n      if (\n        this.postTask.description.length === 0 ||\n        this.postTask.name.length === 0\n      ) {\n        this.$message({\n          message: \"请填写必要的标题和内容\",\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$message({\n        message: \"保存成功\",\n        type: \"success\",\n        showClose: true,\n        duration: 1000\n      });\n      this.postTask.status = \"draft\";\n    }\n    // getRemoteUserList(query) {\n    //   userSearch(query).then(response => {\n    //     if (!response.data.items) return;\n    //     console.log(response);\n    //     this.userLIstOptions = response.data.items.map(v => ({\n    //       key: v.name\n    //     }));\n    //   });\n    // }\n  }\n};\n",{"version":3,"sources":["order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"order.vue","sourceRoot":"src/views/approve","sourcesContent":["<template>\n  <div class=\"createPost-container\">\n    <el-form class=\"form-container\" :model=\"postTask\" :rules=\"rules\" ref=\"postTask\">\n      <sticky :className=\"'sub-navbar '+postTask.status\">\n        <template v-if=\"fetchSuccess\">\n          <router-link style=\"margin-right:15px;\" v-show=\"isEdit\" :to=\"{ path:'create-form'}\">\n            <el-button type=\"info\">创建任务</el-button>\n          </router-link>\n\n          <el-button\n            v-loading=\"loading\"\n            style=\"margin-left: 10px;\"\n            type=\"success\"\n            @click=\"submitForm()\"\n          >通过</el-button>\n          <el-button v-loading=\"loading\" type=\"warning\" @click=\"draftForm\">驳回</el-button>\n        </template>\n        <template v-else>\n          <el-tag>发送异常错误,刷新页面,或者联系程序员</el-tag>\n        </template>\n      </sticky>\n\n      <div class=\"createPost-main-container\">\n        <el-row>\n          <el-col :span=\"21\">\n            <el-form-item style=\"margin-bottom: 40px;\" prop=\"title\">\n              <MDinput name=\"name\" v-model=\"postTask.name\" required :maxlength=\"100\">任务名</MDinput>\n              <span v-show=\"postTask.name.length>=26\" class=\"title-prompt\">app可能会显示不全</span>\n            </el-form-item>\n\n            <div class=\"postInfo-container\">\n              <el-row>\n                <el-col :span=\"8\">\n                  <el-tooltip class=\"item\" effect=\"dark\" content=\"旺旺号\" placement=\"top\">\n                    <el-form-item label-width=\"60px\" label=\"旺旺号:\" class=\"postInfo-container-item\">\n                      <el-input style=\"min-width:150px;\" v-model=\"postTask.searchKeyword\"></el-input>\n                    </el-form-item>\n                  </el-tooltip>\n                </el-col>\n                <el-col :span=\"8\">\n                  <el-tooltip class=\"item\" effect=\"dark\" content=\"微信昵称:\" placement=\"top\">\n                    <el-form-item label-width=\"100px\" label=\"微信昵称:\" class=\"postInfo-container-item\">\n                      <el-input style=\"min-width:100px;\" v-model=\"postTask.searchKeyword\"></el-input>\n                    </el-form-item>\n                  </el-tooltip>\n                </el-col>\n              </el-row>\n            </div>\n          </el-col>\n        </el-row>\n        <el-form-item style=\"margin-bottom: 40px;\" label-width=\"60px\" label=\"订单号:\">\n          <el-input\n            type=\"textarea\"\n            class=\"article-textarea\"\n            :rows=\"1\"\n            autosize\n            v-model=\"postTask.description\"\n          ></el-input>\n          <span class=\"word-counter\" v-show=\"contentShortLength\">{{contentShortLength}}字</span>\n        </el-form-item>\n\n        <div style=\"margin-bottom: 20px;\">\n         <el-row>\n             <el-col>\n                 <el-image :src=\"src\"></el-image>\n             </el-col>\n         </el-row>\n        </div>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\n// import Tinymce from '@/components/Tinymce'\nimport Upload from \"@/components/Upload/singleImage\";\nimport MDinput from \"@/components/MDinput\";\n// import Multiselect from 'vue-multiselect'// 使用的一个多选框组件，element-ui的select不能满足所有需求\n// import 'vue-multiselect/dist/vue-multiselect.min.css'// 多选框组件css\nimport Sticky from \"@/components/Sticky\"; // 粘性header组件\n// import { validateURL } from '@/utils/validate'\nimport { fetchTask, createTask } from \"@/api/task\";\n// import { userSearch } from '@/api/remoteSearch'\n\nconst defaultTask = {\n  status: \"draft\",\n  name: \"\", // 任务名\n  description: \"\", // 任务描述\n  reward: \"\", // 任务奖励\n  searchKeyword: \"\", //搜索关键字\n  pictureUrl: \"\", // 文章图片\n  displayTime: undefined, // 前台展示时间\n  id: undefined,\n  platforms: [\"a-platform\"],\n  comment_disabled: false\n};\n\nexport default {\n  name: \"taskDetail\",\n  components: { Sticky, MDinput, Upload },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const validateRequire = (rule, value, callback) => {\n      if (value === \"\") {\n        this.$message({\n          message: rule.field + \"为必传项\",\n          type: \"error\"\n        });\n        callback(null);\n      } else {\n        callback();\n      }\n    };\n    const validateSourceUri = (rule, value, callback) => {\n      if (value) {\n        if (validateURL(value)) {\n          callback();\n        } else {\n          this.$message({\n            message: \"外链url填写不正确\",\n            type: \"error\"\n          });\n          callback(null);\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      src:\"https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg\",\n      postTask: Object.assign({}, defaultTask),\n      fetchSuccess: true,\n      loading: false,\n      userLIstOptions: [],\n      platformsOptions: [\n        { key: \"a-platform\", name: \"a-platform\" },\n        { key: \"b-platform\", name: \"b-platform\" },\n        { key: \"c-platform\", name: \"c-platform\" }\n      ],\n      rules: {\n        pictureUrl: [{ validator: validateRequire }],\n        name: [{ validator: validateRequire }],\n        description: [{ validator: validateRequire }],\n        pictureUrl: [{ validator: validateSourceUri, trigger: \"blur\" }]\n      }\n    };\n  },\n  computed: {\n    contentShortLength() {\n      return this.postTask.description.length;\n    }\n  },\n  created() {\n    if (this.isEdit) {\n      this.fetchData();\n    } else {\n      this.postTask = Object.assign({}, defaultTask);\n    }\n  },\n  methods: {\n    fetchData() {\n      let id = this.$route.params.taskId;\n      fetchTask(id)\n        .then(response => {\n          this.postTask = response;\n        })\n        .catch(err => {\n          this.fetchSuccess = false;\n          console.log(err);\n        });\n    },\n    submitForm() {\n      this.postTask.displayTime = parseInt(this.displayTime / 1000);\n      console.log(this.postTask);\n      createTask(this.postTask);\n      this.$refs.postTask.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$notify({\n            title: \"成功\",\n            message: \"发布文章成功\",\n            type: \"success\",\n            duration: 2000\n          });\n          this.postTask.status = \"published\";\n          this.loading = false;\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    draftForm() {\n      if (\n        this.postTask.description.length === 0 ||\n        this.postTask.name.length === 0\n      ) {\n        this.$message({\n          message: \"请填写必要的标题和内容\",\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$message({\n        message: \"保存成功\",\n        type: \"success\",\n        showClose: true,\n        duration: 1000\n      });\n      this.postTask.status = \"draft\";\n    }\n    // getRemoteUserList(query) {\n    //   userSearch(query).then(response => {\n    //     if (!response.data.items) return;\n    //     console.log(response);\n    //     this.userLIstOptions = response.data.items.map(v => ({\n    //       key: v.name\n    //     }));\n    //   });\n    // }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"src/styles/mixin.scss\";\n.title-prompt {\n  position: absolute;\n  right: 0px;\n  font-size: 12px;\n  top: 10px;\n  color: #ff4949;\n}\n.createPost-container {\n  position: relative;\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n    .editor-container {\n      min-height: 500px;\n      margin: 0 0 30px;\n      .editor-upload-btn-container {\n        text-align: right;\n        margin-right: 10px;\n        .editor-upload-btn {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: -10px;\n    top: 0px;\n  }\n}\n</style>\n\n"]}]}